/**
 * Generated by orval v6.7.1 üç∫
 * Do not edit manually.
 * transactions
 * PO Transactions

PO Counter Terminal

PO Counter Terminal

PO Counter Terminal

PO Branch Management
 * OpenAPI spec version: 0.1.0
 */
import {
  useQuery,
  UseQueryOptions,
  QueryFunction,
  UseQueryResult,
  QueryKey
} from 'react-query'
import type {
  ValidateAccCardResponse,
  Error,
  GetAccCardDataParams
} from '../../model'
import { useCustomInstance, ErrorType } from '../../mutator/useCustomInstance'

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type AsyncReturnType<
T extends (...args: any) => Promise<any>
> = T extends (...args: any) => Promise<infer R> ? R : any;


/**
 * Get AccCard-data.
 * @summary This endpoint is used to validate acc-card-data
 */
export const useGetAccCardDataHook = () => {
        const getAccCardData = useCustomInstance<ValidateAccCardResponse | void>();

        return (
    params?: GetAccCardDataParams,
 ) => {
        return getAccCardData(
          {url: `/pouch-management/acc-card/validate`, method: 'get',
        params,
    },
          );
        }
      }
    

export const getGetAccCardDataQueryKey = (params?: GetAccCardDataParams,) => [`/pouch-management/acc-card/validate`, ...(params ? [params]: [])];

    
export type GetAccCardDataQueryResult = NonNullable<AsyncReturnType<ReturnType<typeof useGetAccCardDataHook>>>
export type GetAccCardDataQueryError = ErrorType<Error>

export const useGetAccCardData = <TData = AsyncReturnType<ReturnType<typeof useGetAccCardDataHook>>, TError = ErrorType<Error>>(
 params?: GetAccCardDataParams, options?: { query?:UseQueryOptions<AsyncReturnType<ReturnType<typeof useGetAccCardDataHook>>, TError, TData>, }

  ):  UseQueryResult<TData, TError> & { queryKey: QueryKey } => {

  const {query: queryOptions} = options || {}

  const queryKey = queryOptions?.queryKey ?? getGetAccCardDataQueryKey(params);

  const getAccCardData =  useGetAccCardDataHook()

  const queryFn: QueryFunction<AsyncReturnType<ReturnType<typeof useGetAccCardDataHook>>> = () => getAccCardData(params, );

  const query = useQuery<AsyncReturnType<ReturnType<typeof useGetAccCardDataHook>>, TError, TData>(queryKey, queryFn, queryOptions)

  return {
    queryKey,
    ...query
  }
}

