/**
 * Generated by orval v6.10.3 🍺
 * Do not edit manually.
 * cash_drawer_association
 * PO Counter Terminal
 * OpenAPI spec version: 0.1.0
 */
import {
  useMutation
} from 'react-query'
import type {
  UseMutationOptions,
  MutationFunction
} from 'react-query'
import type {
  ApiResponse,
  AssociationDto
} from '../../model'
import { useCustomInstance } from '../../mutator/useCustomInstance'
import type { ErrorType } from '../../mutator/useCustomInstance'


/**
 * This api is used when you want to attach or associate any cash drawer from counter terminal or vice-versa
 * @summary This endpoint is used to associate two entities - like cash drawer to counter terminal
 */
export const usePostAssociatedDataHook = () => {
        const postAssociatedData = useCustomInstance<ApiResponse>();

        return (
    associationDto: AssociationDto,
 ) => {
        return postAssociatedData(
          {url: `/association`, method: 'post',
      headers: {'Content-Type': 'application/json', },
      data: associationDto
    },
          );
        }
      }
    


    export type PostAssociatedDataMutationResult = NonNullable<Awaited<ReturnType<ReturnType<typeof usePostAssociatedDataHook>>>>
    export type PostAssociatedDataMutationBody = AssociationDto
    export type PostAssociatedDataMutationError = ErrorType<unknown>

    export const usePostAssociatedData = <TError = ErrorType<unknown>,
    
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<ReturnType<typeof usePostAssociatedDataHook>>>, TError,{data: AssociationDto}, TContext>, }
) => {
      const {mutation: mutationOptions} = options ?? {};

      const postAssociatedData =  usePostAssociatedDataHook()


      const mutationFn: MutationFunction<Awaited<ReturnType<ReturnType<typeof usePostAssociatedDataHook>>>, {data: AssociationDto}> = (props) => {
          const {data} = props ?? {};

          return  postAssociatedData(data,)
        }

      return useMutation<Awaited<ReturnType<typeof postAssociatedData>>, TError, {data: AssociationDto}, TContext>(mutationFn, mutationOptions)
    }
    