export const STRING_CONSTANTS = {
  RefundScreen: {
    AmountTxtTestId: "amountTxtTestId",
    PaymentModeTestId: "paymentMode",
    CashBtnTxtTestId: "cashBtnTxtTestId",
    CardBtnTxtTestId: "cardBtnTxtTestId",
    ChequeBtnTxtTestId: "chequeBtnTxtTestId",
    AmountInputTestId: "AmountInputTestId",
    BackBtnTestID: "BackBtnTestID",
  },
  CommitFailureModal: {
    retry_Btn: "Retry",
    internetFailureContent: "Please check your network connection.",
    internetFailureTestId: "internetFailureModal",
    ok_Btn: "Ok",
    apiFailureTestId: "apiFailureModal",
  },
  ProductFulfillmentFailureModal: {
    failureTittle: "Failed to process",
    ok_Btn: "Ok",
    productRemoved: "Product removed from the basket.",
    productFailureContent: "Product removed from the basket.",
    valueUpdatedToZero: "Product value updated to 0",
    productFailureTestId: "ProductFailureModal",
  },
  ReceiptPrintingModal: {
    title: "Receipt Printing",
    defaultMessage: "Please wait while receipt is printing",
    printFailureMessage: "Failed to print receipt",
  },
  ShowLicencesModal: {
    showLicencesBodyTestID: "showLicencesModalBodyTestID",
    showLicencesWebViewTestID: "showLicencesModalWebViewTestID",
    closeButton: "closeButton",
  },
  GitInfoScreen: {
    checkLicences: "Check Licences",
    environmentVariableConfig: "Environment Variable Config",
    featureFlagConfig: "Feature Flag Config",
    versionInfo: "Version Info",
    branch: "Branch",
    commit: "Commit",
    tag: "Tag",
  },
  StorageConfig: {
    importConfig: "Import Config",
    exportConfig: "Export Config",
    updateConfig: "Update Config",
    undoUnsavedChanges: "Undo Unsaved Changes",
    resetToDefaults: "Reset to Defaults",
    notImported: "File not imported:",
  },
  EnvironmentVariableConfigScreen: {
    description:
      "Modify your local config below. Any changes will persist until the next time the environment variables are changed.",
  },
  FeatureFlagConfigScreen: {
    description:
      "Modify your local config below. Any changes will persist until the next time the feature flags are changed.",
  },
  LoginScreenTestIds: {
    LoginScreenShadowImage: "loginScreenShadowImage",
    LoginScreenBackGroundImage: "loginScreenBackGroundImage",
    PostOfficeLogo: "postOfficeLogo",
    PostOfficeLogoComponent: "postOfficeLogoComponent",
    ErrorModal: "errorModal",
    LoginClick: "loginClick",
    UserIdInput: "userIdInput",
    PasswordInput: "passwordInput",
    LoginScreenPanel: "loginScreenPanel",
  },
  HomeScreen: {
    showNumPad: "Show Num Pad",
    hideNumPad: "Hide Num Pad",
    processingBasket: "Saving...",
    initialisingPinPad: "Initialising Pin Pad...",
    pinPadError: "Failed to initialise Pin Pad",
  },
  LoginScreen: {
    DeviceID: "Device ID",
    OTP: "OTP",
    OTPTooltip: "A one-time password provided by your engineer",
    PleaseLogin: "Please log in",
    PleaseLoginUser: "Log in with your ForgeRock account",
    WELCOME: "WELCOME",
    Loading: "Loading...",
    loginModalTitle: "Error logging in",
    loginModal: "The Device ID or OTP you entered is incorrect, please try again.",
    Button: {
      Enter: "Enter",
      Login_TryAgain: "Close",
      Cancel_Button: "Cancel",
      login: "Login",
    },
  },
  InputType: {
    password: "password",
    text: "text",
  },
  Button: {
    backSpace: "backSpace",
    suspendBasket: "Suspend Basket",
    recallBasket: "Recall Basket",
    systemInfo: "System Info",
    Scan: "Scan",
    Login_Button: "Login",
    Login_TryAgain: "Close",
    Cancel_Button: "Cancel",
    Decline: "Decline",
    CashDrawerOk_Button: "Succes",
    CashDrawerCancel_Button: "CashDrawerCancel",
    Logout_Button: "Logout",
    HomeScreenLogout_Button: "HomeScreenLogout",
    Scan_Button: "Scan Barcode",
    CashDrawer_ScanAgain: "Scan Again",
    CashDrawer_TryAgain: "Try Again",
    CashDrawer_Proceed: "Proceed",
    BackOffice_Button: "Go to Back Office",
    Reciepts: "Receipts",
    Refund: "Refund",
    More: "More",
    Ok: "Ok",
    Continue: "Continue",
    validationModalButtonsOk: "validationModalButtonsOk",
    validationModalButtonsNo: "validationModalButtonsNo",
    calcelScannedPouchOk: "calcelScannedPouchOk",
    calcelScannedPouchNo: "calcelScannedPouchNo",
    Cash_Transfer_Out: "Cash_Transfer_Out",
    Logout_Cash_drawer: "Logout_Cash_drawer",
    BTN_YES: "Yes",
    BTN_CLOSE: "Close",
    BTN_RETRY: "Retry",
    Update: "Update",
    BTN_ENTER_CODE: "Enter Code",
    BTN_ENTER_VALUE: "Enter Value",
    BTN_ACCEPT: "Accept",
    BTN_RESCAN: "Rescan",
    BTN_BCS: "Call BCS",
    BTN_NO: "No",
    Home: "Home",
    View_Trasnsaction: "View Transactions",
    View_Reciepts: "View_Reciepts",
    LineVoid: "Line Void",
    Quantity: "Quantity",
    VoidBasket: "Void\nBasket",
    VoidBasketBtn: "Void Basket",
    Enter: "Enter",
    Payment: "Payment",
    Complete: "Complete",
    Scan_Pouch: " Scan Pouch",
    Share: "Share",
    Print: "Print",
    Finish: "Finish",
    Submit: "Submit",
    CashTransferOut: `Cash Transfer Out`,
    PouchAcceptance: "Pouch Acceptance",
    PouchDispatch: "Pouch Dispatch",
    Receipt: "Reprint Receipt",
    Transfer: "Transfer",
    Basket: "Void Basket",
    Lock: "Lock Screen",
    Mails: "Mails",
    Banking: "Banking",
    Stamps: "Stamps",
    Travel: "Travel",
    Others: "Others",
    Services: "Services",
    Licence: "Licence",
    LogOff: "Log Off",
    BackOffice: "Back Office",
    BranchHub: "Branch Hub",
    VoidItem: "Void\nItem",
    VoidItemBtn: "Void Item",
    RemoveItem: "Remove item",
    EmptyBasket: "Empty basket",
    Confirm: "Confirm",
    Proceed: "Proceed",
    PreparePouches: "Prepare Pouch",
    Success: "Success",
    SearchReceipt: "More Receipt",
    Close: "Close",
    Retry: "Retry",
    register: "Register",
    backToLogin: "Go back to login",
    tryAgain: "Try again",
    forgotPassword: "Forgot password",
    unlock: "Unlock",
    Reversal: "Reversal",
    SuspendBasket: "Suspend basket",
    RecallBasket: "Recall basket",
    ReprintReceipt: "Reprint Receipt",
    PouchDispatchMenuButton: "Pouch dispatch",
    PouchAcceptanceMenuButton: "Pouch acceptance",
    CashTransferOutMenuButton: "Cash transfer out",
    CashBalance: "Cash balance",
    StockCheck: "Stock check",
    TransactionLog: "Transaction log",
    SystemInfo: "System Info",
    License: "License",
    LogOffMenuButton: "Log off",
    ChequeCutOff: "Cheque cut off",
    Devices: "Devices",
  },
  messages: {
    somethingWentWrong: "Something went wrong",
    tryAgain: "Would you like to try again?",
    basketRestrictionErr: "Error!",
    inProgress: "Development is in progress",

    outstandingCompliance:
      "You have outstanding compliance training so will not be able to undertake some transactions. Please complete your outstanding training.",
    enterPouchValue: "Please enter pouch value",
    enterBarcodeMsg1: "Scan or enter pouch barcode",
    enterBarcodeMsg2: "the text box on the right",
    accBarCodeTitle: "Scan or enter ACC Card barcode in the text box below.",
    accBarCodeError: "Pending pouches list",
    barCodeTitle: "Scan or enter pouch barcode in the text box below.",

    Unabletoscan: "Unable to scan?",
    accBarCodeErrorPopupMessage: "Scan unsuccessful. Please try again",
    errorPreparedPouches: "Do you want to select from the list of prepared pouches?",
    CallBranchSupport: "testing please change",
    recieptSelectMessage: "Start by selecting a receipt from\n             the list on the left.",
  },
  Input: {
    passPlaceholder: "Password",
    BarcodePlaceholder: "Barcode",
    scannerPlaceholderTxtColor: "Enter ACC Card Barcode",
    barCodePlaceholder: "Enter Pouch Barcode",
    barcodeScanner: "Scan or enter a barcode",
    barcodeScannerHome: "Scan, enter barcode or card number",
  },
  ItemList: {
    Item: "Item",
    Title: "Title",
    Qty: "Qty.",
    Price: "Price",
    Total: "Total",
  },
  ReceiptList: {
    testID: "Receipt Screen Test ID",
    previewTestID: "Receipt Screen Preview Test ID",
    webViewTestID: "Receipt Screen Preview Web View Test ID",
    scrollUpTestID: "Receipt Screen Preview Scroll Up Test ID",
    scrollDownTestID: "Receipt Screen Preview Scroll Down Test ID",
    printModalTestID: "Receipt Screen Print Confirm Modal Test ID",
    reprintPrompt: "Please check if the receipt is for the original customer?",
    Select: "Select",
    Time: "Time",
    Total: "Transaction Value",
  },
  Symbols: {
    Pound: "Â£",
  },
  Pouch: {
    InvalidBranch: "Invalid Branch",
    InvalidPouch: "No match found!",
    BranchAndPouchInvalid: "Invalid Branch and Barcode",
    NoAssociationWithPouch:
      "No value is associated with this Pouch. Please remove remittance slip from the pouch and manually enter pouch value.",
    PouchScanningSuccessfull: "Pouch scanning was successfull",
    FailedToScan: "Pouch scanning is unsuccessful",
    FailedToReScan: "Pouch rescanning is unsuccessful",
    EnterBarcode: "Enter Barcode",
    BarCode: "Barcode",
    Date: "Date",
    PouchType: "Pouch Type",
    PouchValue: "Pouch Value",
    Branch: "Branch",
    EnterPouchValue: "Enter amount you want to transfer",
    DuplicatePouch: "Duplicate pouch entry",
    PouchManagement: "Pouch Management",
    PleaseEnterBarCode: "Please enter barcode",
    pouchAcceptanceSubmitted: "Please collect the receipt. \nStore the pouch securely in the Safe.",
    selectPouchFromList: "Pouch rescan is unsuccessful. Do you want to select pouch from list?",
    unableToMatchPouch: "If unable to match any pouch",
    templateTitlePouchDispatch: "POUCH DISPATCH",
    templateTitlePouchAcceptance: "POUCH ACCEPTANCE",
  },
  PouchDispatch: {
    ACCCardsuccessfully: "ACC Card successfully accepted",
    barcodeNotRecognised:
      "Pouch barcode was not recognised. Do you want to select from the list of prepared pouches?",
    collectReceipt: "Please collect the receipt. Handover the receipt to delivery driver.",
    noPouchInList: "There is no pouch in list",
  },
  PouchAcceptance: {
    scanOrEnterBarcode1: "Scan or enter pouch barcode in",
    scanOrEnterBarcode2: "the text box on the right.",
  },
  basket: {
    open: "BKO",
    close: "BKC",
  },
  transaction: {
    entryTypeBanking: "banking",
    entryTypeMail: "mails",
    entryTypeBalanceEnq: "Bill Payment",
    balanceDue: "Balance Due",
    changeDue: "Change Due",
  },
  transactionalMessages: {
    cardLimitMessage: (amount: number | string) => `You can not pay more than ${amount} by card`,
  },
  screenNames: {
    HomeScreen_BackOffice: "Back Office",
    HomeScreen_PO_Launcher: "PO Launcher",
    ReceiptViewer: "Reprint receipt",
    CashTransferOut: "Cash transfer out",
    PouchAcceptence: "Pouch acceptance",
    AssociateCashDrawer: "Associate cash drawer",
    PouchDispatch: "Pouch dispatch",
    PMS: "Devices",
    SystemInfo: "System info",
    LicenceInfo: "Licences",
    EnvironmentVariableConfig: "Environment Variable Config",
    FeatureFlagConfig: "Feature Flag Config",
  },
  cashOperationType: {
    TO: "transfer_out",
    TI: "transfer_in",
  },
  cashTransferEntityType: {
    CD: "cash_drawer",
    SF: "safe",
  },
  loggerStatus: {
    failed: "failed",
    success: "success",
    warn: "warn",
    info: "info",
  },
  pouchScreen: {
    noAvailablePouch: "No pouch found",
  },
  cashTransfer: {
    transfer_at: "Counter Terminal",
    enterAmount: "Please enter amount you want to transfer",
    selectCashLocation: "Please select cash location to transfer",
    selectCashDrawer: "Please associate cash drawer",
  },
  sampleData: {
    cardNo: "7845 4567 3976",
    vatInfo: "18%",
    id: "4536T5G789GH3SO9",
  },
  invaidBarcode: "Invalid Barcode, Please try again",
  barcodeNotRecognized: "The scan is invalid. Please try again.",
  duplicateBarcodeError:
    "This barcode has already been added to the basket, Please check and try again.",
  logoutModalTxt: "Are you sure you would like to log off?",
  logOffMsgIfSuspendedBasket: "You have a suspended basket, are you sure you want to log out?",
  voidBasketModalTxt: "Are you sure you want to void the basket?",
  printReceiptConfirmation: "Do you want a receipt?",
  tranSuccessMsg: "Transaction successful",
  tranDeclineMsg: "Transaction failed",
  revPaymentConfirmationCard: "Do you want to reverse card payment?",
  revPaymentConfirmation: "Do you want to reverse the payments?",
  voidBasketItemModalTxt: "Do you want to remove from the \nbasket?",
  selectBasketItemModalTxt: "Please select item from basket",
  IfbasketIsEmptyModalTxt: "You can not perform this action because basket is empty",
  ifQuantityExceedMaximumTxt: "Quantity cannot be more than 100",
  emptyBasket: "The basket is empty",
  overPaymentTxt: "Post Office To Pay -",
  transactionComplete: "Transaction Completed",
  voidableItemCanNotDeleteTxt: "This item can not be delete",
  voidableItemInBasketTxt: "There is non voidable item in basket",
  homePageBasketHeader: "Basket",
  receiptPageBasketHeader: "Receipt Preview",
  loading: "Loading",
  pinPadModalTitle: "Pin Pad",
  requestType: {
    transactionEngine: "TE",
    counterTerminal: "CT",
    backOffice: "BE",
    backOfficeRedirect: "BER",
  },

  paymentModeId: {
    cash: "cash",
    card: "card",
    cheque: "cheque",
  },
  paymentModeName: {
    cash: "CASH",
    card: "Card",
    cheque: "Cheque",
  },
  paymentAlertMsg: {
    cardPaymentLimitMsg: (amount: number | string): string => {
      return `You can only pay upto Â£ ${amount} by credit card.`;
    },
    cardNotEligible: "Credit card payment not eligible anymore.",
    canNotPayByCard: "You can not use card for this transaction",
    waitWhileLoading: "Please wait while processing",
  },
  Envs: {
    Dev: "dev",
    Test1: "test1",
    Test2: "test2",
    Int: "int",
  },
  CashDrawerScreen: {
    DisplayText1: "Scan or enter cash drawer barcode in",
    DisplayText2: "the text box on the right.",
  },
  CustomModal: {
    titleTestId: "TitleTestId",
    closeButtonTestId: "CloseButtonTestId",
    actionButtonContainerTestId: "ActionButtonContainerTestId",
  },
  SubmitPouchModal: {
    titleTestId: "SubmitPouchTitleTestId",
    closeButtonTestId: "SubmitPouchCloseButtonTestId",
    actionButtonContainerTestId: "SubmitPouchActionButtonContainerTestId",
  },
  ErrorBoundaryMessage: {
    genericErrorMessage: "Something went wrong",
    genericErrorInfo: "We don't know what happened",
  },
  NavigationPanel: {
    BasketMenuHeader: "Basket",
    CounterTerminalMenuHeader: "Counter Terminal",
    BackOfficeMenuHeader: "Back Office",
    SystemMenuHeader: "System",
    OtherMenuHeader: "Other",
    navigationArray: [
      [
        {
          row: 1,
          title: "Basket",
          items: ["Reversal", "Suspend basket", "Recall basket", "Reprint receipt"],
        },
      ],
      [
        {
          row: 2,
          title: "Counter Terminal",
          items: ["Pouch dispatch", "Pouch acceptance", "Cash transfer out", "Logout cash drawer"],
        },
        {
          row: 3,
          title: "Back Office",
          items: ["Cash balance", "Stock check", "Transaction log"],
        },
      ],
      [
        {
          row: 4,
          title: "System",
          items: ["System info", "Licences", "Log off"],
        },
        {
          row: 5,
          title: "Other",
          items: ["Cheque cut off", "Devices"],
        },
      ],
    ],
  },
  quantityEditor: {
    errorLessThanOne: "Quantity can not be less than 1",
    errorMaximumQuantity: "Maximum limit of quantity reached",
    errorHighQuantity: "High quantity entered, do you want to continue?",
  },
} as const;

export default STRING_CONSTANTS;
